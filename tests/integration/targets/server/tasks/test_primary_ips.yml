# Copyright: (c) 2022, Hetzner Cloud GmbH <info@hetzner-cloud.de>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: setup create primary ipv4
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v4"
    type: ipv4
    datacenter: "fsn1-dc14"
  register: primaryIPv4

- name: setup create second primary ipv4
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v42"
    type: ipv4
    datacenter: "fsn1-dc14"
  register: secondPrimaryIPv4

- name: setup create primary ipv6
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v6"
    type: ipv6
    datacenter: "fsn1-dc14"
  register: primaryIPv6

- name: test create server with primary ips
  hetzner.hcloud.server:
    name: "{{ hcloud_server_name }}"
    server_type: cpx11
    datacenter: "fsn1-dc14"
    image: "ubuntu-22.04"
    ipv4: "{{primaryIPv4.hcloud_primary_ip.id}}"
    ipv6: "{{primaryIPv6.hcloud_primary_ip.id}}"
    ssh_keys:
      - "{{ hcloud_ssh_key_name }}"
    state: stopped
  register: server
- name: verify test create server with primary ips
  assert:
    that:
      - server is changed

- name: test update server with primary ips
  hetzner.hcloud.server:
    name: "{{ hcloud_server_name }}"
    server_type: cpx11
    datacenter: "fsn1-dc14"
    image: "ubuntu-22.04"
    ipv4: "{{secondPrimaryIPv4.hcloud_primary_ip.id}}"
    ipv6: ""
    enable_ipv6: false
    ssh_keys:
      - "{{ hcloud_ssh_key_name }}"
    state: stopped
  register: server
- name: verify test create server with primary ips
  assert:
    that:
      - server is changed

- name: cleanup create primary ipv4
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_server_name }}v4"
    state: absent
  register: result
- name: verify cleanup create primary ipv4
  assert:
    that:
      - result is changed
- name: cleanup create second primary ipv4
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_server_name }}v42"
    state: absent
- name: verify cleanup create second primary ipv4
  assert:
    that:
      - result is changed
- name: cleanup create primary ipv6
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_server_name }}v6"
    state: absent
- name: verify cleanup create primary ipv6
  assert:
    that:
      - result is changed

- name: test create primary ipv4 attached to server
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v4"
    server: "{{ hcloud_server_name }}"
    type: ipv4
    state: present
    auto_delete: false
  register: result
- name: verify test create primary ipv4 attached to server
  assert:
    that:
      - result is changed
- name: test create primary ipv4 assignee_id
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v4"
    state: present
  register: result
  until: result.assignee_id is not none
  retries: 5
  delay: 2
- name: verify test create primary ipv4 assignee_id
  assert:
    that:
      - result.hcloud_primary_ip.assignee_id == server.hcloud_server.id
      - result.hcloud_primary_ip.auto_delete is sameas false

- name: test create primary ipv6 attached to server
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v6"
    server: "{{ hcloud_server_name }}"
    type: ipv6
    state: present
    auto_delete: true
  register: result
- name: verify test create primary ipv6 attached to server
  assert:
    that:
      - result is changed
- name: test create primary ipv6 assignee_id
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_primary_ip_name }}v6"
    state: present
  register: result
  until: result.assignee_id is not none
  retries: 5
  delay: 2
- name: verify test create primary ipv6 assignee_id
  assert:
    that:
      - result.hcloud_primary_ip.assignee_id == server.hcloud_server.id
      - result.hcloud_primary_ip.auto_delete is sameas true

- name: cleanup test create primary ipv4 attached to server
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_server_name }}v4"
    state: absent
  register: result
- name: verify cleanup test create primary ipv4 attached to server
  assert:
    that:
      - result is changed

- name: cleanup server with primary ips
  hetzner.hcloud.server:
    name: "{{ hcloud_server_name }}"
    state: absent
- name: cleanup test create primary ipv6 attached to server
  hetzner.hcloud.primary_ip:
    name: "{{ hcloud_server_name }}v6"
    state: absent
  ignore_errors: true
- name: verify primary ipv6 auto_delete
  assert:
    that:
      - result is failed
      #- 'result.msg == "Primary IP deletion is protected"'
